---
# DNSCrypt
- name: "[DNSCrypt] Check if /opt/dnscrypt-proxy already exists"
  stat: path=/opt/dnscrypt-proxy
  register: pihole_dnscrypt_proxy
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Download dnscrypt-proxy2"
  unarchive: src="{{ pihole_dnscrypt_proxy2_link }}" dest=/opt/ remote_src=yes
  become: yes
  register: pihole_linux_arm
  when: pihole_dnscrypt_force_upgrade or not pihole_dnscrypt_proxy.stat.exists
  # without 'when' will be downloaded unconditionally, because creates 'linux-arm' dir which will be renamed
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Make sure old /opt/dnscrypt-proxy is removed if pihole_dnscrypt_force_upgrade is set to yes"
  file: path=/opt/dnscrypt-proxy state=absent
  when: pihole_dnscrypt_force_upgrade
  become: yes
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Rename /opt/linux-arm to /opt/dnscrypt-proxy"
  command: mv /opt/linux-arm /opt/dnscrypt-proxy
  become: yes
  when: pihole_linux_arm.changed
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Symlink /opt/dnscrypt-proxy/dnscrypt-proxy to {{ pihole_dnscrypt_bin }}"
  file: src=/opt/dnscrypt-proxy/dnscrypt-proxy dest="{{ pihole_dnscrypt_bin }}" state=link
  become: yes
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Generate /opt/dnscrypt-proxy/dnscrypt-proxy.toml configuration file"
  template: src=dnscrypt-proxy.toml.j2 dest=/opt/dnscrypt-proxy/dnscrypt-proxy.toml
  become: yes
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Create dnscrypt config directory: {{ pihole_dnscrypt_config }}"
  file: path="{{ pihole_dnscrypt_config }}" state=directory
  become: yes
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Symlink /opt/dnscrypt-proxy/dnscrypt-proxy.toml to {{ pihole_dnscrypt_config }}"
  file: src=/opt/dnscrypt-proxy/dnscrypt-proxy dest="{{ pihole_dnscrypt_config }}" state=link
  become: yes
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Install dnscrypt-proxy service"
  command: /opt/dnscrypt-proxy/dnscrypt-proxy -service install
  register: pihole_dnscrypt_proxy_installed
  become: yes
  failed_when:
    - pihole_dnscrypt_proxy_installed.rc != 0
    - pihole_dnscrypt_proxy_installed.rc != 255
  changed_when: pihole_dnscrypt_proxy_installed.rc == 0
  notify: Restart dnscrypt-proxy service
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Uninstall old dnscrypt-proxy service"
  command: /opt/dnscrypt-proxy/dnscrypt-proxy -service uninstall
  become: yes
  when:
    - pihole_dnscrypt_proxy_installed.rc == 255
    - pihole_dnscrypt_force_upgrade
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Upgrade dnscrypt-proxy service"
  command: /opt/dnscrypt-proxy/dnscrypt-proxy -service install
  become: yes
  notify: Restart dnscrypt-proxy service
  when: pihole_dnscrypt_force_upgrade
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Check dnscrypt-proxy binary capabilities for running it as unprivileged user"
  command: setcap -v cap_net_bind_service=+pe /opt/dnscrypt-proxy/dnscrypt-proxy
  become: yes
  register: pihole_dnscrypt_bin_cap
  failed_when: false
  changed_when: false
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Fix dnscrypt-proxy binary capabilities for running it as unprivileged user"
  command: setcap cap_net_bind_service=+pe /opt/dnscrypt-proxy/dnscrypt-proxy
  become: yes
  when: pihole_dnscrypt_bin_cap.rc != 0
  tags:
    - pihole
    - dnscrypt


# Systemd
- name: "[DNSCrytp] Check if systemd is present in distribution"
  stat: path=/bin/systemctl
  register: pihole_systemd
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Generate systemd dnscrypt-proxy.socket unit"
  template:
    src: systemd/dnscrypt-proxy.socket.j2
    dest: /lib/systemd/system/dnscrypt-proxy.socket
    owner: root
    group: root
    mode: 0644
  become: yes
  when: pihole_systemd.stat.exists
  notify: Restart dnscrypt-proxy.service
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Generate systemd dnscrypt-proxy.service unit"
  template:
    src: systemd/dnscrypt-proxy.service.j2
    dest: /lib/systemd/system/dnscrypt-proxy.service
    owner: root
    group: root
    mode: 0644
  become: yes
  when: pihole_systemd.stat.exists
  notify: Restart dnscrypt-proxy.service
  tags:
    - pihole
    - dnscrypt


# Modify PIHOLE
- name: "[DNSCrypt] Generate /etc/dnsmasq.d/02-dnscrypt.conf"
  template: src=02-dnscrypt.conf.j2 dest=/etc/dnsmasq.d/02-dnscrypt.conf
  become: yes
  notify: Restart dnsmasq
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Modify /etc/pihole/setupVars.conf"
  replace:
    path: /etc/pihole/setupVars.conf
    regexp: '^(PIHOLE_DNS_[0-9]=.*)'
    replace: '#\1'
  become: yes
  notify: Restart dnsmasq
  tags:
    - pihole
    - dnscrypt

- name: "[DNSCrypt] Modify /etc/dnsmasq.d/01-pihole.conf"
  replace:
    path: /etc/dnsmasq.d/01-pihole.conf
    regexp: '^(server=.*)'
    replace: '#\1'
  become: yes
  notify: Restart dnsmasq
  tags:
    - pihole
    - dnscrypt
...
